## pound - HTTP/HTTPS reverse-proxy and load-balancer
#
# /etc/pound/pound.cfg
#
# Pound needs three objects to function:
# 1 Listener - Receives request from the client
# 2 Service - Load balance between back ends.
# 3 BackEnd - Provides response to the client
# Pound connects to the back-ends using HTTP.
#
## Global Options
#
# Specify user/group that pound will run as:
User        "someuser"
Group       "someuser"
#
# Specify apparent root directory'
RootJail    "/var/chroot/pound"
#
## Logging: (goes to syslog by default)
#
# Specify the log facility to use (default: daemon).
# See facility names defined in syslog.h.
# See /etc/rsyslog.d/30-pound.conf
LogFacility local0
#  0 No logging.
#  1 Default for regular logging.
#  2 Extended logging (show chosen backend server as well).
#  3 Apache-like format (Combined Log Format with Virtual Host).
#  4 Same as 3 but without the virtual host information.
#  5 Same as 4 but with information about the Service and BackEnd used.
LogLevel    3
#
## check backend every X secs:
Alive       30
## poundctl control socket
Control "/var/run/pound/poundctl.socket"

# Load Balance/Reverse Proxy WAN HTTP to LAN servers
ListenHTTP
    Address localhost
    Port    80

    HeadRemove "X-Forwarded-Proto"
    AddHeader  "X-Forwarded-Proto: http"

    Err414 "/etc/pound/error414.html"
    Err500 "/etc/pound/error500.html"
    Err501 "/etc/pound/error501.html"
    Err503 "/etc/pound/error503.html"
End

# Load Balance/Reverse Proxy WAN HTTPS to LAN servers
#ListenHTTPS
#    Address localhost
#    Port    443
#    Cert    "/etc/pound/cert/my-server-certificate.pem"
#
#    SSLAllowClientRenegotiation 0
#    SSLHonorCipherOrder 1
#    Ciphers "ECDHE+AESGCM:ECDH+AESGCM:DH+AESGCM:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS:!SSLv2"
#
#    HeadRemove "X-Forwarded-Proto"
#    AddHeader  "X-Forwarded-Proto: https"
#
#    Err414 "/etc/pound/error414.html"
#    Err500 "/etc/pound/error500.html"
#    Err501 "/etc/pound/error501.html"
#    Err503 "/etc/pound/error503.html"
#End

# Test with simple echo server.
#    server: ncat -l 8080 -k -c 'xargs -n1 echo'
#    client: ncat localhost 8080
Service
    URL "(^\/favicon.ico$)|(^\/echo.*)"
    BackEnd
        Address localhost
        Port 8080
    End
    Session
        Type Cookie
        ID   "JSESSIONID"
        TTL  300
    End
End
